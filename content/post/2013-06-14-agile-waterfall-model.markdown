---
author: varokas
comments: true
date: 2013-06-14 02:36:28+00:00
layout: post
slug: agile-waterfall-model
title: An Agile development model called "Waterfall"
wordpress_id: 264
categories:
- Software Engineering
---

วันนี้ขอเสนอโมเดลการพัฒนาซอฟแวร์แบบอไจล์ครับ ชื่อว่า "Waterfall" เปรียบได้เหมือนกับการไหลของน้ำตกจาก Requirement ไปจนถึง Deploy

ถ้าวาดเอาง่ายๆ ก็เป็นดังรูปข้างล่าง

[![Untitled Diagram (3)](images/2013/06/untitled-diagram-3.png?w=293)](images/2013/06/untitled-diagram-3.png)


### **ขั้นตอน**





	
  1. **Requirement** : ในขั้นนี้เราก็เอา User Story มาอันนึง แล้วก็คุยกับลูกค้าให้พอเข้าใจว่าจะสร้างมันยังไง

	
  2. **Design** : เสร็จแล้วก็คุยกับเพื่อนร่วมทีมคร่าวๆ ว่าจะโค้ดยังไง มีอะไรที่ต้องเขียนที่มีการออกแบบต่างจากปกติรึเปล่า?

	
  3. **Code**: ลงมือเขียนโค้ด ถ้ามี QA และก็อาจจะเขียน test case ไปพร้อมๆ กัน

	
  4. **Test**: รันเทส ถ้ามันไม่ผ่านก็กลับไปแก้โค้ดให้ผ่าน

	
  5. **Deploy**: ถ้างานเสร็จ ก็เอาไปดีพลอยซักที่ให้ลูกค้าดู​ ถ้าลูกค้าชอบ เกิดประโยชน์ ก็เอามันไปโยนใส่ production




### **Waterfail?**


อ้าว แล้วแบบนี้มันต่างกับไอ้ที่เราเคยทำกันตรงไหนล่ะ? เราไม่ได้พยายามดิ้นรนหนีออกมาจากสิ่งนี้อยู่หรอ?

จริงๆ แล้วเวลาเราพูดถึง Waterfall เรามักจะเหมารวมกันถึงสองเรื่อง



	
  1. กระบวนการ จาก Req -> Design -> Code -> Test -> Deploy

	
  2. การที่เราต้องที Req ทั้งระบบ จากนั้นก็ไป Design ทั้งระบบ Code ทั้งระบบ Test ทั้งหมด แล้วก็ Deploy ก้อนใหญ่ๆ


สิ่งที่เราพยายามหนีออกมาจาก "Waterfall" ที่พูดๆ กัน ไม่ใช่ขั้นตอนกระบวนการทำงานจาก Req -> Deploy ในข้อที่หนึ่งหรอกครับ แต่คือการที่เราต้องไปจมอยู่กับแต่ละกล่องเป็นเวลานานๆ วันๆ ก็นั่งเขียนแต่ Requirement ไปเรื่อยๆ คุยกันจนได้ครบ แล้วก็เข้าไปขั้น Design เสียเวลาอีกนานๆ แล้วก็ลงไปทำขั้นถัดไปๆ เรื่อยๆ 

จนมาวันหนึ่ง test จบ เอามันไปให้ลูกค้าได้ดู ก็จะได้รายการบ่นจากลูกค้ามาชุดใหญ่ๆ ไปให้แก้ (ก็เพราะเราให้เค้าดูทีละเยอะๆ เองนิ ช่วยไม่ได้)

Waterfail ที่ชอบพูดกันด้วยอารมณ์สิ้นหวัง จริงๆ แล้วก็คือแค่การล้มเหลวในการสร้าง "ความพึงพอใจของลูกค้าที่มีต่อการส่งมอบซอฟท์แวร์ที่มีคุณค่าต่อลูกค้า ตั้งแต่ต้นอย่างต่อเนื่อง" ([หลักการเบื้องหลังคำแถลงอุดมการณ์แห่งอไจล์ #1](http://agilemanifesto.org/iso/th/principles.html)) เท่านั้นเอง


### **สรุป**


ถ้า [Agile ไม่มีอยู่จริง](http://varokas.wordpress.com/2013/05/20/there-is-no-agile/) แล้้ว "Waterfall" ที่พูดกันก็ไม่มีอยู่จริงด้วยครับ

ถ้าคิดง่ายๆ ลองมองมันเป็นสองขั้วที่อยู่คนละข้างกัน ก็ได้



	
  * เวลาคนทั่วไปเรียกตัวเองว่า **Agile** คือการบอกว่าเค้าอยู่ใกล้ฝั่งที่ดันจาก Req จนถึง Deploy โดยใช้เวลาน้อยๆ (เดือน วัน หรือ ชม) มากกว่า

	
  * เวลาคนทั่วไปเรียกตัวเองว่า **Waterfall** คือการบอกว่าเค้าอยู่ใกล้ฝั่งที่ดันจาก Req จนถึง Deploy โดยใช้เวลามากๆ (ไตรมาส ปี หรือ หลายๆ ปี) มากกว่า


ไม่ได้เกี่ยวอะไรกับลำดับการทำงานอะไรก่อนหลัง

แล้ววันนี้คุณอยู่ใกล้ฝั่งไหนมากกว่ากัน?
