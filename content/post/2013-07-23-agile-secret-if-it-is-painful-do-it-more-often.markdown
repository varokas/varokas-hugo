---
author: varokas
comments: true
date: 2013-07-23 07:16:36+00:00
layout: post
slug: agile-secret-if-it-is-painful-do-it-more-often
title: 'Agile Secret: If it is painful, do it more often'
wordpress_id: 164
categories:
- Software Engineering
---

คนที่เคยอ่านๆ เกี่ยวกับอไจล์ โดยเฉพาะเกี่ยวกับเรื่องแถวๆ Continuous Integration คงจะเคยได้ยินประโยคข้างต้นมาบ้าง ผมก็ไม่แน่ใจเหมือนกันว่าใครเป็นคนพูดคนแรก พยายามไปหาก็ยังไม่มีบอกเหมือนกันว่าเป็นใคร แต่เป็นหลักการที่เป็นหมัดเด็ดของอไจล์ (แต่ไม่ค่อยมีคนแถวนี้พูดถึงเลยแฮะ) มันคือ


<blockquote>If it is painful, do it more often
- ถ้าอะไรมันเจ็บปวด ก็ทำมันบ่อยๆ -</blockquote>




### Not a sadist suggestion!


ไม่ได้แปลว่าให้เป็นพวกชอบความเจ็บปวด ย้ำๆลงไปจุดที่เจ็บๆ จะได้ทรมานแล้วดิ้นรนหาวิธีมาแก้ไขนะ (มีคนแปลอย่างนั้นจริงๆ นะ แล้วแบบไปไกลเลย)

เค้าแปลว่า อะไรที่มันเป็นสิ่งที่เราจะไม่อยากทำน่ะ สัญชาติญาณความขี้เกียจของเราก็มันจะพยายามปัดๆ ไปค่อยแก้ๆ กันวันหลังใช่มั๊ย เราทุกคนก็คงอยากทำอะไรที่สนุก อะไรที่มันไม่สนุกก็หมักๆ กองๆ มันไว้ทำเป็นไม่เห็นก็ได้

ทีนี้โค้ดรกมันก็ไม่เหมือนห้องรกน่ะสิ มันมองไม่ค่อยเห็นว่ามันรกยังไง รู้ตัวอีกทีก็ตอนที่เราต้องไปนั่งไล่หาบั๊กอยู่เป็นวันๆ แล้วก็บ่นกันว่าใครเขียนโค้ดแถบส่วนนี้ขึ้นมา (วะ) แล้วทำไมตอนแรกไม่ทำให้มันดีๆ (วะ) จะมาเก็บกวาดตอนนี้ก็รกเหลือทนต้องเสียเวลาแก้ไขไปนานเลย แทนที่จะเสียเวลาค่อยๆทำทีละนิดๆ


### Do it early, do it often


สรุปคือ อะไรที่ไม่ชอบทำให้ "**ทำบ่อยๆ มันจะได้ไม่สะสม" **เป็นชุดใหญ่

ใครเข้าใจอันนี้ได้ ก็จะเข้าใจอไจล์ไปได้เยอะเลยครับ เพราะอไจล์เป็นเรื่องของการเก็บ feedback และปรับปรุงตัวเองบ่อยๆ

ยิ่งทำบ่อย ก็ยิ่งเห็นข้อผิดพลาดได้เร็ว ข้อแก้ไขก็มีทีละนิด แทนที่จะสะสมมาเยอะๆ


### Do everything more often


ลองมองดูมันมีอยู่เต็มไปหมด ทั้งด้าน management และ technical



	
  * "ลูกค้าจู้จี้ ตรวจงานทีมีรายการแก้ทีใหญ่ยาว แก้โน่นแก้นี่" --> ก็เอาไปให้เค้าดูบ่อยๆ สิ รายการแก้จะได้มีทีนะนิด (Release Often)

	
  * "เอาโค้ดมารวมกันที วอดวายไปเป็นวัน" --> Integrate มันทุก commit นะแหละ จะได้รู้ว่าอะไรเป็นต้นเหตุทำให้มันพัง (Continuous Integration)

	
  * "รีลีสที นอนบริษัทไป 3 วัน" --> ก็ไม่เคยจะซ้อมรีลีสเลยนิ มาทำเอาทีเดียวใกล้ๆ จบ --> ก็ซ้อมรีลีสกันบ่อยๆ สิ ทำมันทุกครั้งที่เช็คอินเลย รีลีสไปที่ UAT environment นี่แหละ (Continuous Deployment)

	
  * "เทสทีก็พังเป็นแถบ ไม่รู้ว่าพังตรงไหน" --> เขียนเทสทีละนิด รันมันบ่อยๆ สิ จะได้รู้ว่าอะไรพัง (Automated Tests/TDD)

	
  * "ขี้เกียจแก้โค้ดตาม code review แก้เยอะแยะไปหมด" - ก็ code review มันบ่อยๆสิ บ่อยมากๆ จนเป็น (Pair Programming) ก็ได้

	
  * "ส่งเมล์ไปมากว่าจะเข้าใจ เฮ้อ" - เวลาสื่อสารกัน ก็หาอะไรที่มันโต้ตอบกันได้ไวๆ สิ ไม่เข้าใจจุดไหนก็ถามกลับมาได้เลย จนกลายเป็น (face-to-face communication) ก็ยิ่งดี

	
  * ... (และอื่นๆอีกมากมาย) ...




### One more thing


สุดท้าย .. แถม ...​"merge นรก กลุ้มใจ" - ก็กองโค้ดที่ไม่ได้รวมกับคนอื่นเค้า (branch / uncommitted code) เอาไว้เยอะๆ เองนิ --> merge มันบ่อยๆ merge มันทุกลมหายใจ จนกลายเป็น (Trunk Development) เลยก็ได้
