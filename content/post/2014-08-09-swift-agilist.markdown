---
author: varokas
comments: true
date: 2014-08-09 04:11:31+00:00
layout: post
slug: swift-agilist
title: ระบายอารมณ์เรื่อง Swift ในมุมมองของ Agilist
wordpress_id: 795
categories:
- Software Engineering
---

ไม่ได้เขียนบล็อกเรื่อง Programming มานาน เดี๋ยวจะคิดว่านนเปลี่ยนไปทำไฟแนนซ์แล้ว วันนี้เลยอยากจะมาระบายอารมณ์​ (ทั้งอารมณ์ดีและอารมณ์เสีย) เรื่อง Swift จากมุมมองของ Agilist ซักหน่อย
<!-- more -->

จริงๆ ไม่เคยอยากจะแตะอะไรเกี่ยวกับ iOS เลยตั้งแต่เห็น Objective-C แว๊บแรกแล้ว เพราะดูน่ากลัวมาก ไม่น่าเชื่อว่าไอ้ที่เราถูๆ ลื่นๆ บนไอโฟนมันจะถูกเขียนอยู่บนอะไรที่โบราณขนาดนี้ เข้าใจว่าหลายคนก็คงไม่อยากจะไปยุ่งกับมันหรอก แต่ทำไงได้มันไม่มีทางเลือก

[![2a79d285a6f440d61b4bde229e0fe04e1ff1c9b7](/images/2014/08/2a79d285a6f440d61b4bde229e0fe04e1ff1c9b7-1024x588.png)](/images/2014/08/2a79d285a6f440d61b4bde229e0fe04e1ff1c9b7.png)

พอ Apple ประกาศ​ Swift แว๊บแรกนี่ดูดีมากเลย... พยายามจะไปโหลดทันที แต่..เสียตังค์ T_T

ได้ลองเอาจริงจังๆ ก็ตอน XCode Beta 3 เนี่ยแหละ เค้าเปิดให้โปรแกรมเมอร์จนๆ ทั่วไปอย่างเราได้โหลดมาใช้ฟรีแล้ว ก็เลยลองมาเล่นดู ก็เล่นเสร็จตั้งนานละ เขียนบล็อกก่อนเค้าจะออกของจริงก็แล้วกัน เผื่อมีใครเล่นอยู่ด้วย

เนื่องจากไม่รู้จะทำอะไรดี ก็เลยงัด [Kata Tennis](http://codingdojo.org/cgi-bin/index.pl?KataTennis) มาจัดซักรอบ จะได้รู้ว่าภาษากับ tools มันไปถึงไหนละ



## อารมณ์ดี : ภาษาง่าย



ที่อยากลองเล่น Swift เพราะดูผ่านๆแล้วมันเหมือนกับ Scala อย่างกับจะถอดแบบมาเลย แต่พอลองเข้าไปจริงๆ แล้วมันก็มีต่างกันหลายอย่างนะ เหมือนยืมๆ มาจาก Go บ้าง จาก Scala บ้าง เอาของตัวเองใส่เข้าไปบ้าง รวมๆ แล้วก็เป็นภาษาที่อ่านง่าย ไม่ค่อยมี keyword ไม่จำเป็นใส่เข้ามาเท่าไหร่

ที่สำคัญคือไม่พยายามยัดเยียดอะไรบางอย่างเข้ามาในตัวภาษา เหมือนกับ XML หรือ Actor Model ของ Scala ที่พยายามอัดเข้ามา (แต่ตอนนี้ตัดสินใจเริ่มๆเอาออกไปแล้ว)



## อารมณ์ดี : Documentation อ่านง่าย



ไม่รู้อันนี้เป็นเวทมนต์อะไรของ Apple รึเปล่า แต่ Document ของ Swift รู้สึกได้ว่าเป็นระบบมาก อ่านง่ายมาก แบ่งเป็นหมวดหมู่ดี จะหาอะไรก็ง่าย ตัวอย่างชัดเจน ของง่ายๆ วางไว้ตอนแรก ใครอยากโดนของแรงๆ ก็ไปอ่านในหมวด Language Reference ซะ

ไม่เชื่อลองไปดูได้ [Swift Documentation](https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html)

ต่างกับภาษาอื่นๆ ที่บางทีเหมือนเอา Wiki มาเย็บๆ กันมากกว่า



## อารมณ์ดี : Type-Safe กับ Type Inference



ส่วนตัวชอบภาษาแบบ static ถึงแม้มันจะต้องง้อ compiler เยอะๆ กว่าจะยอมให้ผ่านก็เถอะ รู้สึกเองว่ายุคนี้แล้ว static checker ก็พัฒนาไปถึงไหนๆ แล้ว ยังอยากจะมาเสี่ยงให้ของมันพังตอนรันอีกทำไม? ถ้าไม่อยากให้พังก็ต้องเขียนเทสมาครอบเยอะ ซึ่งก็ไม่ค่อยยอมจะเขียนกันอยู่ดี

ก็เลยรู้สึกดีว่า Apple ตัดสินใจทำภาษาใหม่แบบ static นะ อาจจะไม่ถูกใจทุกคน แต่ถูกใจเรามาก ฮ่าๆๆ

อันนี้ไม่รู้ว่าก็อบมาจาก Scala หรือเปล่า แต่ชอบมากตรงที่ String Interpolation ก็โดนเช็คด้วย หมดปัญหาข้อความพังอีกต่อไป (ลาก่อน sprintf)

[![Screen Shot 2014-07-15 at 5.19.47 PM](/images/2014/08/Screen-Shot-2014-07-15-at-5.19.47-PM.png)](/images/2014/08/Screen-Shot-2014-07-15-at-5.19.47-PM.png)



## อารมณ์เสีย : Refactoring



เอาไปรูปเดียวแทนได้เป็นพันคำ

[![Screen Shot 2014-07-16 at 11.53.11 AM](/images/2014/08/Screen-Shot-2014-07-16-at-11.53.11-AM.png)](/images/2014/08/Screen-Shot-2014-07-16-at-11.53.11-AM.png)

ก็ยังอุตส่าห์เป็นไอเท็มในเมนูให้คลิ๊กแล้วผิดหวังอ่ะนะ อย่างน้อยขอ Extract Method ก็ยังดีนะครับ -*- เอาไว้จัดโค้ดง่ายๆ นี่ต้องมาก๊อบมือเองหมดเลย (ไม่ทำ TDD ไม่รู้หรอก)



## อารมณ์เสีย : บั๊ก



ภาษาที่ดูง่ายๆนี้บางทีมันก็มีจุดแปลกๆอยู่ในในภาษาเยอะเลย เช่น ไม่มี private method ?!? อันนี้เค้าบอกเดี๋ยวจะแก้ในรุ่นเต็ม ก็รอดูกัน

บางอันก็เป็นเหมือนบั๊กใน compiler มั๊ง เช่นถ้าเขียน circular reference เพื่อที่จะทำ container แบบนี้ ก็จะทำให้ XCode พังได้เลยทีเดียว

[code]
protocol ScoreState {
  func aWins(context: ScoreStateContext)
  ...
}
protocol ScoreStateContext {
  func setScoreState(scoreState: ScoreState)
  ...
}
[/code]

[![Screen Shot 2014-07-16 at 11.46.53 AM](/images/2014/08/Screen-Shot-2014-07-16-at-11.46.53-AM.png)](/images/2014/08/Screen-Shot-2014-07-16-at-11.46.53-AM.png)

นี่ไม่ได้ตั้งใจแกล้งนะ กำลังลอง refactor มันเป็น state pattern ใช้งานจริงๆ



## สรุป



สรุปดื้อๆ ก็อารมณ์ดีมากกว่าอารมณ์เสียนะ ภาษาง่ายดี ไม่พยายามทำตัวให้มีลูกเล่นแปลกๆ ทำให้อยากเล่น iOS มากขึ้นเป็นพันเท่า แต่ถ้าจะเอาอะไรจริงจังก็คงมีบั๊กอยู่เยอะพอสมควร ระวังด้วยละกัน



## Show me the Code



ใครสนใจโค้ดไปดูดมาได้จาก github : [kata-swift](https://github.com/varokas/kata-swift/blob/master/kata-swift-test/kata_tennis_test.swift)

ปล.​ กรุณาอย่าด่าว่า ทำไมเขียนโค้ดในไฟล์เทส เพราะพยายามแล้วแต่เซ็ตโปรเจค XCode ไม่เป็นเลยซักนิดเดียว T_T
